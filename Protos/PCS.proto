syntax = "proto3";

service PCSService {
  rpc runWorker(PCSRunWorkerRequest) returns (PCSRunWorkerReply);
  rpc runStorage(PCSRunStorageRequest) returns (PCSRunStorageReply);
  rpc runScheduler(PCSRunSchedulerRequest) returns (PCSRunSchedulerReply);
  rpc listServer(PcsListServerRequest) returns (PcsListServerReply);
  rpc listGlobal(PcsListGlobalRequest) returns (PcsListGlobalReply);
  rpc getStorages(PcsGetStoragesRequest) returns (PcsGetStoragesReply);
  rpc getWorkers(PcsGetWorkersRequest) returns (PcsGetWorkersReply);
  rpc getScheduler(PcsGetSchedulerRequest) returns (PcsGetSchedulerReply);
  rpc crash(CrashRequest) returns (CrashReply);
  rpc debug(DebugRequest) returns (DebugReply);
  rpc status(StatusRequest) returns (StatusReply);
  rpc populate(PopulateRequest) returns (PopulateReply);
}


message PopulateRequest{
  string dataFilePath = 1;
}

message PopulateReply{
  bool ok = 1;
}

message StatusRequest{
  string id = 1;
}

message StatusReply{
  bool ok = 1;
}

message DebugRequest{
  string id = 1;
}

message DebugReply{
  bool ok = 1;
}

message CrashRequest{
  string id = 1;
}

message CrashReply{
  bool ok = 1;
}

message PCSRunWorkerRequest {
	string id = 1;  // the id of the object being read
  int32 gossip_delay = 2;
  bool debug = 3;
  string url = 4;
}

message PCSRunWorkerReply {
	bool ok = 1;
  string result = 2;
}

message PCSRunStorageRequest {
    string id = 1;  // the id of the object being read
//	  string port = 2;
    int32 gossip_delay = 2;
    bool debug = 3;
    string url = 4;
}

message PCSRunStorageReply {
    bool ok = 1;
    string result = 2;
}

message PCSRunSchedulerRequest {
  string id = 1;  // the id of the object being read
  bool debug = 2;
  string url = 3;
}

message PCSRunSchedulerReply {
  bool ok = 1;
  string result = 2;
}

message PcsListServerRequest {
  int32 id = 1;
}

message PcsListServerReply {
  repeated string objects = 1;
}

message PcsListGlobalRequest { }

message PcsListGlobalReply {
  repeated string objects = 1;
}

message PcsGetStoragesRequest { }

message PcsGetStoragesReply {
  repeated string storages = 1;
}

message PcsGetWorkersRequest { }

message PcsGetWorkersReply {
  repeated string workers = 1;
}

message PcsGetSchedulerRequest { }

message PcsGetSchedulerReply {
  string scheduler = 1;
}